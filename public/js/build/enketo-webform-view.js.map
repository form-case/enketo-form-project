{
  "version": 3,
  "sources": ["../src/enketo-webform-view.js"],
  "sourcesContent": ["import calcModule from 'enketo-core/src/js/calculate';\nimport { FormModel } from 'enketo-core/src/js/form-model';\nimport preloadModule from 'enketo-core/src/js/preload';\nimport gui from './module/gui';\nimport controller from './module/controller-webform';\nimport settings from './module/settings';\nimport connection from './module/connection';\nimport { init as initTranslator, t, localize } from './module/translator';\n\n// Completely disable calculations in Enketo Core\n// Completely disable instanceID and deprecatedID population in Enketo Core\n// Completely disable preload items\n\nconst loader = document.querySelector('.main-loader');\nconst formheader = document.querySelector('.main > .paper > .form-header');\nconst survey = {\n    enketoId: settings.enketoId,\n    instanceId: settings.instanceId,\n};\nconst range = document.createRange();\ncalcModule.update = () => {\n    console.log('Calculations disabled.');\n};\nFormModel.prototype.setInstanceIdAndDeprecatedId = () => {\n    console.log('InstanceID and deprecatedID population disabled.');\n};\npreloadModule.init = () => {\n    console.log('Preloaders disabled.');\n};\n\ninitTranslator(survey)\n    .then((survey) => connection.getFormParts(survey))\n    .then((formParts) => {\n        if (survey.instanceId) {\n            return connection.getExistingInstance(survey).then((response) => {\n                formParts.instance = response.instance;\n                formParts.instanceAttachments = response.instanceAttachments;\n\n                return formParts;\n            });\n        }\n\n        return formParts;\n    })\n    .then((formParts) => {\n        if (formParts.form && formParts.model) {\n            return gui.swapTheme(formParts);\n        }\n        throw new Error(t('error.unknown'));\n    })\n    .then(_convertToReadonly)\n    .then(_init)\n    .catch(_showErrorOrAuthenticate);\n\nfunction _showErrorOrAuthenticate(error) {\n    loader.classList.add('fail');\n    if (error.status === 401) {\n        window.location.href = `${\n            settings.loginUrl\n        }?return_url=${encodeURIComponent(window.location.href)}`;\n    } else {\n        if (!Array.isArray(error)) {\n            error = [error.message || t('error.unknown')];\n        }\n\n        gui.alertLoadErrors(error);\n    }\n}\n\nfunction _convertToReadonly(formParts) {\n    formParts.formFragment = range.createContextualFragment(formParts.form);\n    // mark form controls as read only\n    // Note: Enketo made a syntax error by adding the readonly attribute on a <select>\n    // Hence, we cannot use .prop('readonly', true). We'll continue the syntax error.\n    [\n        ...formParts.formFragment.querySelectorAll(\n            '.question input:not([readonly]), .question textarea:not([readonly]), .question select:not([readonly])'\n        ),\n    ].forEach((el) => {\n        el.setAttribute('readonly', 'readonly');\n        el.classList.add('readonly-forced');\n    });\n    // Properly make native selects readonly (for touchscreens)\n    formParts.formFragment\n        .querySelectorAll('select:not(#form-languages) option')\n        .forEach((el) => (el.disabled = true));\n    // prevent adding an Add/Remove UI on repeats\n    formParts.formFragment\n        .querySelectorAll('.or-repeat-info')\n        .forEach((el) => el.setAttribute('data-repeat-fixed', 'fixed'));\n\n    return formParts;\n}\n\nfunction _init(formParts) {\n    formheader.after(formParts.formFragment);\n    const formEl = document.querySelector('form.or');\n\n    return controller\n        .init(formEl, {\n            modelStr: formParts.model,\n            instanceStr: formParts.instance,\n            external: formParts.externalData,\n            instanceAttachments: formParts.instanceAttachments,\n            survey: formParts,\n        })\n        .then((form) => {\n            formParts.languages = form.languages;\n            document.querySelector('head>title').textContent =\n                document.querySelector('#form-title').textContent;\n            if (settings.print) {\n                gui.applyPrintStyle();\n            }\n            // after widgets have been initialized, localize all data-i18n elements\n            localize(formEl);\n        });\n}\n"],
  "mappings": "0KAaA,IAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAa,SAAS,cAAc,+BAA+B,EACnEC,EAAS,CACX,SAAUC,EAAS,SACnB,WAAYA,EAAS,UACzB,EACMC,EAAQ,SAAS,YAAY,EACnCC,EAAW,OAAS,IAAM,CACtB,QAAQ,IAAI,wBAAwB,CACxC,EACAC,EAAU,UAAU,6BAA+B,IAAM,CACrD,QAAQ,IAAI,kDAAkD,CAClE,EACAC,EAAc,KAAO,IAAM,CACvB,QAAQ,IAAI,sBAAsB,CACtC,EAEAC,EAAeN,CAAM,EAChB,KAAMA,GAAWO,EAAW,aAAaP,CAAM,CAAC,EAChD,KAAMQ,GACCR,EAAO,WACAO,EAAW,oBAAoBP,CAAM,EAAE,KAAMS,IAChDD,EAAU,SAAWC,EAAS,SAC9BD,EAAU,oBAAsBC,EAAS,oBAElCD,EACV,EAGEA,CACV,EACA,KAAMA,GAAc,CACjB,GAAIA,EAAU,MAAQA,EAAU,MAC5B,OAAOE,EAAI,UAAUF,CAAS,EAElC,MAAM,IAAI,MAAMG,EAAE,eAAe,CAAC,CACtC,CAAC,EACA,KAAKC,CAAkB,EACvB,KAAKC,CAAK,EACV,MAAMC,CAAwB,EAEnC,SAASA,EAAyBC,EAAO,CACrCjB,EAAO,UAAU,IAAI,MAAM,EACvBiB,EAAM,SAAW,IACjB,OAAO,SAAS,KAAO,GACnBd,EAAS,uBACE,mBAAmB,OAAO,SAAS,IAAI,KAEjD,MAAM,QAAQc,CAAK,IACpBA,EAAQ,CAACA,EAAM,SAAWJ,EAAE,eAAe,CAAC,GAGhDD,EAAI,gBAAgBK,CAAK,EAEjC,CAEA,SAASH,EAAmBJ,EAAW,CACnC,OAAAA,EAAU,aAAeN,EAAM,yBAAyBM,EAAU,IAAI,EAItE,CACI,GAAGA,EAAU,aAAa,iBACtB,uGACJ,CACJ,EAAE,QAASQ,GAAO,CACdA,EAAG,aAAa,WAAY,UAAU,EACtCA,EAAG,UAAU,IAAI,iBAAiB,CACtC,CAAC,EAEDR,EAAU,aACL,iBAAiB,oCAAoC,EACrD,QAASQ,GAAQA,EAAG,SAAW,EAAK,EAEzCR,EAAU,aACL,iBAAiB,iBAAiB,EAClC,QAASQ,GAAOA,EAAG,aAAa,oBAAqB,OAAO,CAAC,EAE3DR,CACX,CAEA,SAASK,EAAML,EAAW,CACtBT,EAAW,MAAMS,EAAU,YAAY,EACvC,IAAMS,EAAS,SAAS,cAAc,SAAS,EAE/C,OAAOC,EACF,KAAKD,EAAQ,CACV,SAAUT,EAAU,MACpB,YAAaA,EAAU,SACvB,SAAUA,EAAU,aACpB,oBAAqBA,EAAU,oBAC/B,OAAQA,CACZ,CAAC,EACA,KAAMW,GAAS,CACZX,EAAU,UAAYW,EAAK,UAC3B,SAAS,cAAc,YAAY,EAAE,YACjC,SAAS,cAAc,aAAa,EAAE,YACtClB,EAAS,OACTS,EAAI,gBAAgB,EAGxBU,EAASH,CAAM,CACnB,CAAC,CACT",
  "names": ["loader", "formheader", "survey", "settings_default", "range", "calculate_default", "FormModel", "preload_default", "init", "connection_default", "formParts", "response", "gui_default", "t", "_convertToReadonly", "_init", "_showErrorOrAuthenticate", "error", "el", "formEl", "controller_webform_default", "form", "localize"]
}
